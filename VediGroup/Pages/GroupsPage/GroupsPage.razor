@page "/groups"
@attribute [Authorize(Roles = "Administrator")]
@inject NavigationManager NavigationManager
@inject IModalService ModalService
@inject IJSRuntime JS


<button class="btn btn-primary mb-5" @onclick=@(NewGroupClick)>
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"></path>
        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"></path>
    </svg>
    Добавить
</button>

<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach(var group in Groups)
    {
        <div class="col">
            <div class="card h-100 pointer" @onclick="@(() => OpenGroupInfo(group))">
                @if (group.image == null)
                {
                    <svg class="bd-placeholder-img card-img-top" width="100%" height="180" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Image cap" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"></rect><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Нет изображения</text></svg>
                }
                else
                {
                <img src="data:image/png;base64, @Convert.ToBase64String(group.image)" class="card-img-top" alt="...">
                }
                <div class="card-body">
                    <h5 class="card-title">@group.name</h5>
                    <p class="card-text">@group.description</p>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<Group> Groups = DataAccess.GetGroups();

    private void NewGroupClick()
    {
        var options = new ModalOptions()
            {
                Size = ModalSize.Medium
            };
        var parameters = new ModalParameters()
        .Add(nameof(GroupAddModal.Group), new Group());
        ModalService.Show<GroupAddModal>("Добавить новую группу", parameters, options);
    }

    private void OpenGroupInfo(Group group)
    {
        this.NavigationManager.NavigateTo($"/groups/{group.id}", true);
    }

}

